{
  "name": "vscode-sqlfluff",
  "displayName": "sqlfluff",
  "version": "2.2.7",
  "description": "A linter and auto-formatter for SQLfluff, a popular linting tool for SQL and dbt.",
  "publisher": "dorzey",
  "icon": "images/icon.png",
  "engines": {
    "vscode": "^1.63.0"
  },
  "categories": [
    "Other"
  ],
  "homepage": "https://github.com/sqlfluff/vscode-sqlfluff",
  "repository": {
    "type": "git",
    "url": "https://github.com/sqlfluff/vscode-sqlfluff"
  },
  "bugs": {
    "url": "https://github.com/sqlfluff/vscode-sqlfluff/issues"
  },
  "license": "MIT",
  "keywords": [
    "sqlfluff",
    "dbt",
    "sql",
    "sql-bigquery",
    "jinja-sql",
    "postgres",
    "snowflake-sql"
  ],
  "activationEvents": [
    "onLanguage:sql",
    "onLanguage:sql-bigquery",
    "onLanguage:jinja-sql",
    "onLanguage:postgres",
    "onLanguage:snowflake-sql"
  ],
  "main": "./out/src/extension.js",
  "contributes": {
    "commands": [
      {
        "command": "sqlfluff.lint",
        "title": "SQLFluff Lint",
        "when": "extensionLangId == sql || extensionLangId == sql-bigquery || extensionLangId == jinja-sql"
      },
      {
        "command": "sqlfluff.lintProject",
        "title": "SQLFluff Lint Project"
      },
      {
        "command": "sqlfluff.fix",
        "title": "SQLFluff Fix",
        "when": "extensionLangId == sql || extensionLangId == sql-bigquery || extensionLangId == jinja-sql"
      }
    ],
    "configuration": {
      "properties": {
        "sqlfluff.config": {
          "type": "string",
          "default": "",
          "description": "Specify an additional configuration file that overrides the standard configuration files."
        },
        "sqlfluff.environmentVariables": {
          "type": "array",
          "default": [
            {
              "key": "EXAMPLE_KEY",
              "value": "example_value"
            }
          ],
          "items": {
            "type": "object",
            "additionalProperties": false,
            "required": [
              "key",
              "value"
            ],
            "properties": {
              "key": {
                "type": "string",
                "markdownDescription": "The key for the environment variable."
              },
              "value": {
                "type": "string",
                "markdownDescription": "The value for the environment variable."
              }
            }
          },
          "markdownDescription": "Set the environment variables for the linter and formatter."
        },
        "sqlfluff.executablePath": {
          "type": "string",
          "default": "sqlfluff",
          "description": "Points to the sqlfluff exectuable."
        },
        "sqlfluff.dialect": {
          "type": "string",
          "enum": [
            "",
            "ansi",
            "athena",
            "bigquery",
            "clickhouse",
            "databricks",
            "db2",
            "duckdb",
            "exasol",
            "hive",
            "mysql",
            "oracle",
            "postgres",
            "redshift",
            "snowflake",
            "soql",
            "sparksql",
            "sqlite",
            "teradata",
            "tsql"
          ],
          "default": "",
          "description": "The dialect of SQL to lint."
        },
        "sqlfluff.excludeRules": {
          "type": "array",
          "default": [],
          "description": "Exclude specific rules. The excludedRules from the global settings and workspace settings are combined."
        },
        "sqlfluff.ignoreLocalConfig": {
          "type": "boolean",
          "default": false,
          "description": "Ignore config files in default search path locations. Can be used with config to only reference the custom config file."
        },
        "sqlfluff.ignoreParsing": {
          "type": "boolean",
          "default": false,
          "description": "Determines if the sql linter should ignore parsing errors."
        },
        "sqlfluff.rules": {
          "type": "array",
          "default": [],
          "description": "Narrow the search to only specific rules. The rules from the global settings and workspace settings are combined."
        },
        "sqlfluff.suppressNotifications": {
          "type": "boolean",
          "default": false,
          "description": "Hide notification messages. The output channel will still be populated."
        },
        "sqlfluff.workingDirectory": {
          "type": "string",
          "default": "",
          "markdownDescription": "Set the working directory for the `sqlfluff lint` and `sqlfluff fix` commands. This defaults to the root path of the workspace. This setting should only be changed if absolutely necessary."
        },
        "sqlfluff.codeActions.excludeRules.workspace": {
          "type": "boolean",
          "default": true,
          "markdownDescription": "Determines if the `Exclude Rule <rule> from Workspace Settings` code action is enabled."
        },
        "sqlfluff.codeActions.excludeRules.global": {
          "type": "boolean",
          "default": true,
          "markdownDescription": "Determines if the `Exclude Rule <rule> from Global Settings` code action is enabled."
        },
        "sqlfluff.codeActions.noqa": {
          "type": [
            "array",
            "boolean"
          ],
          "default": [
            "L015",
            "L017",
            "L019",
            "L030",
            "L032",
            "L034",
            "L035",
            "L037",
            "L038",
            "L040",
            "L041",
            "L042",
            "L043",
            "L044",
            "L054",
            "L058",
            "L063",
            "L064"
          ],
          "markdownDescription": "Set the rules that will not show the `noqa` code actions. Set this to `false` to disable all `noqa` code actions."
        },
        "sqlfluff.format.arguments": {
          "type": "array",
          "default": [],
          "markdownDescription": "This is useful for setting extra arguments for the `sqlfluff fix` command."
        },
        "sqlfluff.format.enabled": {
          "type": "boolean",
          "default": true,
          "description": "Determines if the document formatter is enabled."
        },
        "sqlfluff.experimental.format.executeInTerminal": {
          "type": "boolean",
          "default": false,
          "markdownDescription": "Determines if the `sqlfluff fix` command overwrites the file contents instead of this extension. You should not change the file contents while formatting is occurring if this is enabled. May lead to problems if `editor.formatOnSave = true`. This allows formatting to work when the templater is set to dbt. This can help solve [Mojibake](https://en.wikipedia.org/wiki/Mojibake) issues."
        },
        "sqlfluff.linter.arguments": {
          "type": "array",
          "default": [],
          "markdownDescription": "This is useful for setting extra arguments for the `sqlfluff lint` command."
        },
        "sqlfluff.linter.delay": {
          "type": "number",
          "default": 100,
          "markdownDescription": "Set the delay (milliseconds) before running the linter when using `sqlfluff.linter.run = 'onType'`."
        },
        "sqlfluff.linter.diagnosticSeverity": {
          "type": "string",
          "enum": [
            "error",
            "warning",
            "information",
            "hint"
          ],
          "default": "error",
          "markdownDescription": "Set the default diagnostic severity of the linting results."
        },
        "sqlfluff.linter.diagnosticSeverityByRule": {
          "type": "array",
          "default": [],
          "items": {
            "type": "object",
            "additionalProperties": false,
            "required": [
              "rule",
              "severity"
            ],
            "properties": {
              "rule": {
                "type": "string",
                "markdownDescription": "The specific rule for the diagnostic severity."
              },
              "severity": {
                "type": "string",
                "enum": [
                  "error",
                  "warning",
                  "information",
                  "hint"
                ],
                "markdownDescription": "Set the diagnostic severity for the given rule."
              }
            }
          },
          "markdownDescription": "Set the diagnostic severity of individual linting results."
        },
        "sqlfluff.linter.lintEntireProject": {
          "type": "boolean",
          "default": false,
          "markdownDescription": "Determines if the linter will lint the workspaces on startup and configuration changes. Does not work with `dbt-osmosis`."
        },
        "sqlfluff.linter.run": {
          "type": "string",
          "enum": [
            "onType",
            "onSave",
            "off"
          ],
          "default": "onType",
          "description": "Determines if the linter runs on save, on type, or disabled.",
          "markdownEnumDescriptions": [
            "Run the linter when the document is typed in. Does not work when the templater is set to dbt.",
            "Run the linter when the document is saved.",
            "Do not run the linter."
          ]
        },
        "sqlfluff.osmosis.enabled": {
          "type": "boolean",
          "default": false,
          "markdownDescription": "Enable this if `dbt-osmosis` is installed. This disables all other options except for `sqlfluff.config`."
        },
        "sqlfluff.osmosis.host": {
          "type": "string",
          "default": "localhost",
          "description": "The host for the osmosis server."
        },
        "sqlfluff.osmosis.port": {
          "type": "number",
          "default": 8581,
          "description": "The port for the osmosis server."
        }
      }
    }
  },
  "scripts": {
    "vscode:prepublish": "npm run -S esbuild-base -- --minify",
    "compile": "rimraf out && tsc -p ./ && npm run postbuild",
    "watch": "rimraf out && tsc -watch -p ./",
    "pretest": "npm run compile",
    "test": "node ./out/test/runTest.js",
    "download-api": "vscode-dts dev",
    "postdownload-api": "vscode-dts main",
    "lint": "eslint src --ext ts",
    "lint:fix": "eslint src --ext ts --fix",
    "esbuild-base": "rimraf out && esbuild ./src/extension.ts --bundle --outfile=out/src/extension.js --external:vscode --format=cjs --keep-names --platform=node",
    "esbuild": "npm run -S esbuild-base -- --sourcemap",
    "esbuild-watch": "npm run -S esbuild-base -- --sourcemap --watch",
    "postbuild": "copyfiles \"./test/suite/test_sql/**/*.sql\" \"./out\" && copyfiles \"./test/.sqlfluff\" \"./out\"",
    "deploy": "vsce publish"
  },
  "devDependencies": {
    "@types/glob": "^7.2.0",
    "@types/mocha": "^9.1.0",
    "@types/node": "^17.0.21",
    "@types/node-fetch": "^2.6.2",
    "@types/vscode": "^1.59.0",
    "@typescript-eslint/eslint-plugin": "^5.13.0",
    "@typescript-eslint/parser": "^5.13.0",
    "copyfiles": "^2.4.1",
    "esbuild": "^0.14.24",
    "eslint": "^8.10.0",
    "eslint-config-prettier": "^8.5.0",
    "eslint-plugin-simple-import-sort": "^7.0.0",
    "eslint-plugin-tsdoc": "^0.2.14",
    "glob": "^7.2.0",
    "mocha": "^9.2.1",
    "typescript": "^4.6.2",
    "vsce": "^2.6.7",
    "vscode-dts": "^0.3.3",
    "vscode-test": "^1.3.0"
  },
  "dependencies": {
    "node-abort-controller": "^2.0.0",
    "node-fetch": "^2.6.7"
  }
}

{
  "name": "vscode-sqlfluff",
  "displayName": "sqlfluff",
  "version": "0.0.8",
  "description": "A linter and auto-formatter for SQLfluff, a popular linting tool for SQL and dbt.",
  "publisher": "dorzey",
  "icon": "images/icon.png",
  "engines": {
    "vscode": "^1.59.0"
  },
  "categories": [
    "Other"
  ],
  "homepage": "https://github.com/dorzey/vscode-sqlfluff",
  "repository": {
    "type": "git",
    "url": "https://github.com/dorzey/vscode-sqlfluff"
  },
  "bugs": {
    "url": "https://github.com/dorzey/vscode-sqlfluff/issues"
  },
  "license": "MIT",
  "keywords": [
    "sqlfluff",
    "dbt",
    "sql",
    "sql-bigquery",
    "jinja-sql"
  ],
  "activationEvents": [
    "onLanguage:sql",
    "onLanguage:sql-bigquery",
    "onLanguage:jinja-sql"
  ],
  "main": "./out/src/extension.js",
  "contributes": {
    "configuration": {
      "properties": {
        "sqlfluff.config": {
          "type": "string",
          "default": "",
          "description": "Specify an additional configuration file that overrides the standard configuration files."
        },
        "sqlfluff.executablePath": {
          "type": "string",
          "default": "sqlfluff",
          "description": "Points to the sqlfluff exectuable."
        },
        "sqlfluff.dialect": {
          "type": "string",
          "enum": [
            "",
            "ansi",
            "athena",
            "bigquery",
            "clickhouse",
            "databricks",
            "db2",
            "exasol",
            "hive",
            "mysql",
            "oracle",
            "postgres",
            "redshift",
            "snowflake",
            "soql",
            "sparksql",
            "sqlite",
            "teradata",
            "tsql"
          ],
          "default": "",
          "description": "The dialect of SQL to lint."
        },
        "sqlfluff.excludeRules": {
          "type": "array",
          "default": [],
          "description": "Exclude specific rules."
        },
        "sqlfluff.ignoreLocalConfig": {
          "type": "boolean",
          "default": false,
          "description": "Ignore config files in default search path locations. Can be used with config to only reference the custom config file."
        },
        "sqlfluff.ignoreParsing": {
          "type": "boolean",
          "default": false,
          "description": "Determines if the sql linter should ignore parsing errors."
        },
        "sqlfluff.rules": {
          "type": "array",
          "default": [],
          "description": "Narrow the search to only specific rules."
        },
        "sqlfluff.workingDirectory": {
          "type": "string",
          "default": "",
          "markdownDescription": "Set the working directory for the `sqlfluff lint` and `sqlfluff fix` commands. This defaults to the root path of the workspace. This setting should only be changed if absolutely necessary."
        },
        "sqlfluff.format.enabled": {
          "type": "boolean",
          "default": true,
          "description": "Determines if the document formatter is enabled."
        },
        "sqlfluff.experimental.format.executeInTerminal": {
          "type": "boolean",
          "default": false,
          "markdownDescription": "Determines if the `sqlfluff fix` command overwrites the file contents instead of this extension. You should not change the file contents while formatting is occurring if this is enabled. May lead to problems if `editor.formatOnSave = true`. This allows formatting to work when the templater is set to dbt. This can help solve [Mojibake](https://en.wikipedia.org/wiki/Mojibake) issues."
        },
        "sqlfluff.linter.run": {
          "type": "string",
          "enum": [
            "onType",
            "onSave",
            "off"
          ],
          "default": "onType",
          "description": "Determines if the linter runs on save, on type, or disabled.",
          "markdownEnumDescriptions": [
            "Run the linter when the document is typed in. Does not work when the templater is set to dbt.",
            "Run the linter when the document is saved.",
            "Do not run the linter."
          ]
        }
      }
    }
  },
  "scripts": {
    "vscode:prepublish": "npm run -S esbuild-base -- --minify",
    "compile": "rimraf out && tsc -p ./ && npm run postbuild",
    "watch": "rimraf out && tsc -watch -p ./",
    "pretest": "npm run compile",
    "test": "node ./out/test/runTest.js",
    "download-api": "vscode-dts dev",
    "postdownload-api": "vscode-dts main",
    "lint": "eslint src --ext ts",
    "lint:fix": "eslint src --ext ts --fix",
    "esbuild-base": "rimraf out && esbuild ./src/extension.ts --bundle --outfile=out/src/extension.js --external:vscode --format=cjs --platform=node",
    "esbuild": "npm run -S esbuild-base -- --sourcemap",
    "esbuild-watch": "npm run -S esbuild-base -- --sourcemap --watch",
    "postbuild": "copyfiles \"./test/suite/test_sql/**/*.sql\" \"./out\" && copyfiles \"./test/.sqlfluff\" \"./out\"",
    "deploy": "vsce publish"
  },
  "devDependencies": {
    "@types/glob": "^7.2.0",
    "@types/mocha": "^9.1.0",
    "@types/node": "^17.0.21",
    "@types/vscode": "^1.59.0",
    "@typescript-eslint/eslint-plugin": "^5.13.0",
    "@typescript-eslint/parser": "^5.13.0",
    "copyfiles": "^2.4.1",
    "esbuild": "^0.14.24",
    "eslint": "^8.10.0",
    "eslint-config-prettier": "^8.5.0",
    "eslint-plugin-simple-import-sort": "^7.0.0",
    "eslint-plugin-tsdoc": "^0.2.14",
    "glob": "^7.2.0",
    "mocha": "^9.2.1",
    "typescript": "^4.6.2",
    "vsce": "^2.6.7",
    "vscode-dts": "^0.3.3",
    "vscode-test": "^1.3.0"
  },
  "__metadata": {
    "id": "dd94e113-0773-42ed-9bc0-2f4b55bc7185",
    "publisherDisplayName": "dorzey",
    "publisherId": "db31b9db-3aa2-44a0-8541-71cab84423a9",
    "isPreReleaseVersion": false
  }
}
